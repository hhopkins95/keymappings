// Place your key bindings in this file to override the defaults
[
  /**


  Information -- bindings that reveal information or navigate to it


  */
  {
    "command": "editor.action.triggerSuggest",
    "key": "cmd+space",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  }, // Bring up suggestion menu -- cmd space
  {
    "command": "editor.action.showHover",
    "key": "shift-k",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }, // Show hover for current symbol -- shift k
  {
    "command": "editor.action.peekTypeDefinition",
    "key": "shift-l",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }, // Peek at type definition -- shift l
  {
    "command": "editor.action.revealDefinition",
    "key": "space g d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }, // Jump to definition -- space g d
  {
    "command": "editor.action.goToReferences",
    "key": "space g r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }, // Jump to references -- space g r
  {
    "command": "editor.action.rename",
    "key": "space c r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }, // Rename symbol -- space c r
  {
    "command": "workbench.action.gotoSymbol",
    "key": "space c s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }, // Go to symbol -- space c s
  /**


    FILE EXPLORER -- Hotkeys for when the file explorer is focused

  */
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFolder",
    "key": "shift-a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "command": "runCommands",
    "key": "shift-s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },
  /**


  TERMINAL Hotkeys for when the terminal is focused


   */
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "tab",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusNext",
    "key": "shift+tab",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "cmd+t",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "cmd+w",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.split",
    "key": "cmd+s",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.terminal.split",
    "key": "cmd+\\",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  /**


LISTS - navigating popoup lists


Basically : 
cmd + j == go down in list 
cmd + k == go up in list

*/
  {
    "command": "selectPrevSuggestion",
    "key": "cmd+k",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectNextSuggestion",
    "key": "cmd+j",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "list.focusUp",
    "key": "cmd+k",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusDown",
    "key": "cmd+j",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "quickInput.next",
    "key": "cmd+j",
    "when": "inQuickOpen"
  },
  {
    "command": "quickInput.previous",
    "key": "cmd+k",
    "when": "inQuickOpen"
  },
  /** 


FOCUS / LAYOUT -- alter where the focus is, or what windows are open / where they are

  */
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "cmd+l"
  }, // Toggle Sidebar Visibility
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  }, // ^^ neg
  {
    "command": "workbench.action.showAllEditors",
    "key": "space space",
    "when": "editorTextFocus && vim.mode == 'Normal' || !inputFocus && vim.mode == 'Normal'"
  }, // Show all open editors in list
  {
    "command": "workbench.view.extension.project-manager",
    "key": "shift+cmd+m"
  }, // Focus Project Manager
  {
    "command": "workbench.action.focusPanel",
    "key": "shift+cmd+j"
  }, // Focus Terminal Panel
  {
    "key": "cmd+h",
    "command": "workbench.action.toggleAuxiliaryBar"
  }, // Toggle Secondary siderbar
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  }, // ^^ neg
  {
    "key": "shift+cmd+h",
    "command": "windsurf.prioritized.chat.open",
    "when": "!terminalFocus"
  }, // Focus Windsurf Chat
  {
    "key": "shift+cmd+h",
    "command": "windsurf.prioritized.chat.openFromTerminal",
    "when": "terminalFocus"
  }, // Focus Windsurf Chat from Terminal
  {
    "key": "shift+cmd+h",
    "command": "windsurf.chatPanelView.focus"
  }, // Focus Windsurf Chat
  {
    "key": "cmd+l",
    "command": "-windsurf.prioritized.chat.open",
    "when": "!terminalFocus"
  }, // ^^ neg
  {
    "key": "cmd+l",
    "command": "-windsurf.prioritized.chat.openFromTerminal",
    "when": "terminalFocus"
  }, // ^^ neg
  {
    "key": "shift+cmd+j",
    "command": "terminal.focus"
  }, // Focus Terminal

  {
    "key": "shift+cmd+space",
    "command": "workbench.action.focusActiveEditorGroup"
  }, // Focus Editor
  {
    "key": "shift+cmd+m",
    "command": "projectsExplorerFavorites.focus"
  }, // Focus Project Manager
  {
    "key": "shift+cmd+l",
    "command": "workbench.explorer.fileView.focus"
  }, // Focus Files Explorer
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  }, // Focus Src Control
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  }, // ^^ neg
  /*


  Editor Navigation (ctrl + cmd) -- w/ hyper == caps + s


  */
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }, // Focus Next Terminal Pane
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }, // ^^ neg
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.nextEditor"
  }, // Focus Next Editor Pane
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  }, // ^^ neg
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }, // Focus Previous Terminal Pane
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }, // ^^ neg
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.previousEditor"
  }, // Focus Previous Editor Pane
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  }, // ^^ neg
  {
    "key": "ctrl+cmd+]",
    "command": "workbench.action.moveEditorToNextGroup"
  }, // Move Editor to Next Group
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  }, // ^^ neg
  {
    "key": "ctrl+cmd+[",
    "command": "workbench.action.moveEditorToPreviousGroup"
  }, // Move Editor to Previous Group
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  }, // ^^ neg
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.focusLeftGroup"
  }, // Focus Left Group
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  }, // ^^ neg
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.focusRightGroup"
  }, // Focus Right Group
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  }, // ^^ neg

  /*
Windsurf Chat
  */
  {
    "key": "ctrl+cmd+o",
    "command": "windsurf.chat.openShortcuts",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "-windsurf.chat.openShortcuts",
    "when": "editorTextFocus"
  },

  /*

  FOLDING

  */
  {
    "key": "ctrl+cmd+0",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  }, // ^^ neg
  {
    "key": "ctrl+cmd+-",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+cmd+=",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+cmd+9",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  /**

MISC

*/

  {
    "key": "shift+cmd+s",
    "command": "workbench.action.files.saveFiles"
  }, // Save all
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveAs"
  }, // ^^ neg
  {
    "command": "editor.action.codeAction",
    "key": "space c a",
    "when": "vim.moade == 'Normal' && editorTextFocus"
  }, // Code Action
  {
    "args": {
      "cwd": "${fileDirname}"
    },
    "command": "workbench.action.terminal.newWithCwd",
    "key": "ctrl+cmd+j"
  }, // Add new terminal at the director of the current file
  {
    "key": "cmd+]",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus"
  }, // Go to next issue in file
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  }, // ^^ neg
  {
    "key": "cmd+[",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  }, // Go to previous issue in file
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  } // ^^ neg
]
